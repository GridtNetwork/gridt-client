{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { Router } from '@angular/router';\nimport { LoadingController, AlertController } from '@ionic/angular';\nimport { AuthService } from '../core/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"../core/auth.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction LoginPage_ion_item_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 13)(1, \"ion-label\");\n    i0.ɵɵtext(2, \" Should be a valid email. \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginPage_ion_item_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 13)(1, \"ion-label\");\n    i0.ɵɵtext(2, \" Should at least be 6 characters long. \");\n    i0.ɵɵelementEnd()();\n  }\n}\nvar LoginPage = /** @class */function () {\n  function LoginPage(router, loadingCtrl, alertCtrl, auth) {\n    this.router = router;\n    this.loadingCtrl = loadingCtrl;\n    this.alertCtrl = alertCtrl;\n    this.auth = auth;\n  }\n  LoginPage.prototype.ngOnInit = function () {};\n  /*\n   * Log user in with api and handle loading popup\n   */\n  LoginPage.prototype.authenticate = function (email, password) {\n    return __awaiter(this, void 0, void 0, function () {\n      var el;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.loadingCtrl.create({\n              keyboardClose: true,\n              message: 'Logging in...'\n            })];\n          case 1:\n            el = _a.sent();\n            el.present();\n            this.auth.login$(email, password).subscribe(function (loggedIn) {\n              if (!loggedIn) {\n                el.dismiss();\n                _this.showAlert(\"Failed to login\");\n              }\n              _this.router.navigateByUrl('/home');\n              el.dismiss();\n            }, function (error) {\n              el.dismiss();\n              _this.showAlert(error);\n            });\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /*\n   * Handle form validation.\n   */\n  LoginPage.prototype.onSubmit = function (form) {\n    if (!form.valid) {\n      return;\n    }\n    var password = form.value.password;\n    var email = form.value.email;\n    this.authenticate(email, password);\n  };\n  LoginPage.prototype.showAlert = function (message) {\n    this.alertCtrl.create({\n      header: 'Authentication failed',\n      message: message,\n      buttons: ['Okay']\n    }).then(function (alertEl) {\n      return alertEl.present();\n    });\n  };\n  LoginPage.ɵfac = function LoginPage_Factory(t) {\n    return new (t || LoginPage)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.LoadingController), i0.ɵɵdirectiveInject(i2.AlertController), i0.ɵɵdirectiveInject(i3.AuthService));\n  };\n  LoginPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginPage,\n    selectors: [[\"app-login\"]],\n    decls: 32,\n    vars: 3,\n    consts: [[\"padding\", \"\"], [\"src\", \"/assets/gridt_logo.png\", 2, \"width\", \"200px\", \"height\", \"100px\"], [3, \"ngSubmit\"], [\"f\", \"ngForm\"], [\"size-sm\", \"6\", \"offset-sm\", \"3\"], [\"position\", \"floating\"], [\"type\", \"email\", \"ngModel\", \"\", \"name\", \"email\", \"required\", \"\", \"email\", \"\"], [\"emailCtrl\", \"ngModel\"], [\"lines\", \"none\", 4, \"ngIf\"], [\"type\", \"password\", \"ngModel\", \"\", \"name\", \"password\", \"required\", \"\", \"minlength\", \"6\"], [\"passwordCtrl\", \"ngModel\"], [\"type\", \"submit\", \"color\", \"primary\", \"expand\", \"block\", 3, \"disabled\"], [\"href\", \"login/register\"], [\"lines\", \"none\"]],\n    template: function LoginPage_Template(rf, ctx) {\n      if (rf & 1) {\n        var _r5 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n        i0.ɵɵtext(3, \"Login\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(4, \"ion-content\", 0);\n        i0.ɵɵelement(5, \"ion-img\", 1);\n        i0.ɵɵelementStart(6, \"form\", 2, 3);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginPage_Template_form_ngSubmit_6_listener() {\n          i0.ɵɵrestoreView(_r5);\n          var _r0 = i0.ɵɵreference(7);\n          return i0.ɵɵresetView(ctx.onSubmit(_r0));\n        });\n        i0.ɵɵelementStart(8, \"ion-grid\")(9, \"ion-row\")(10, \"ion-col\", 4)(11, \"ion-list\")(12, \"ion-item\")(13, \"ion-label\", 5);\n        i0.ɵɵtext(14, \"E-Mail\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"ion-input\", 6, 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, LoginPage_ion_item_17_Template, 3, 0, \"ion-item\", 8);\n        i0.ɵɵelementStart(18, \"ion-item\")(19, \"ion-label\", 5);\n        i0.ɵɵtext(20, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"ion-input\", 9, 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(23, LoginPage_ion_item_23_Template, 3, 0, \"ion-item\", 8);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(24, \"ion-row\")(25, \"ion-col\", 4)(26, \"ion-button\", 11);\n        i0.ɵɵtext(27, \" Login \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"p\");\n        i0.ɵɵtext(29, \"No Account? \");\n        i0.ɵɵelementStart(30, \"a\", 12);\n        i0.ɵɵtext(31, \"Register\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        var _r0 = i0.ɵɵreference(7);\n        var _r1 = i0.ɵɵreference(16);\n        var _r3 = i0.ɵɵreference(22);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngIf\", !_r1.valid && _r1.touched);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", !_r3.valid && _r3.touched);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !_r0.valid);\n      }\n    },\n    dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.MinLengthValidator, i5.EmailValidator, i5.NgModel, i5.NgForm, i2.IonButton, i2.IonCol, i2.IonContent, i2.IonGrid, i2.IonHeader, i2.IonImg, i2.IonInput, i2.IonItem, i2.IonLabel, i2.IonList, i2.IonRow, i2.IonTitle, i2.IonToolbar, i2.TextValueAccessor]\n  });\n  return LoginPage;\n}();\nexport { LoginPage };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}