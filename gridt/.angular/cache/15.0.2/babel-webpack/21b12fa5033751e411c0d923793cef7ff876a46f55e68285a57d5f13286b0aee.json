{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { LoadingController, AlertController } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../../core/api.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"../../core/api.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction AddMovementPage_ion_row_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-row\")(1, \"ion-col\", 6)(2, \"p\");\n    i0.ɵɵtext(3, \"Name must be between 4 and 50 characters.\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction AddMovementPage_ion_row_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-row\")(1, \"ion-col\", 6)(2, \"p\");\n    i0.ɵɵtext(3, \"Short description must be between 10 and 100 characters.\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction AddMovementPage_ion_select_option_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-select-option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var interval_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", interval_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(interval_r3);\n  }\n}\nvar AddMovementPage = /** @class */function () {\n  function AddMovementPage(router, alertCtrl, loadingCtrl, api) {\n    this.router = router;\n    this.alertCtrl = alertCtrl;\n    this.loadingCtrl = loadingCtrl;\n    this.api = api;\n    this.intervalTypes = ['daily', 'twice daily', 'weekly'];\n  }\n  AddMovementPage.prototype.ngOnInit = function () {\n    this.form = new FormGroup({\n      name: new FormControl(\"\", {\n        updateOn: 'blur',\n        validators: [Validators.required, Validators.minLength(4), Validators.maxLength(50)]\n      }),\n      description: new FormControl(\"\", {\n        updateOn: 'blur'\n      }),\n      short_description: new FormControl(\"\", {\n        updateOn: 'blur',\n        validators: [Validators.required, Validators.minLength(10), Validators.maxLength(100)]\n      }),\n      interval: new FormControl(\"\", [Validators.required])\n    });\n  };\n  AddMovementPage.prototype.ngOnDestroy = function () {\n    this.alertCtrl.dismiss();\n  };\n  AddMovementPage.prototype.createMovement = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var el;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.form.valid) {\n              return [2 /*return*/];\n            }\n\n            return [4 /*yield*/, this.loadingCtrl.create({\n              message: 'Creating a movement...'\n            })];\n          case 1:\n            el = _a.sent();\n            return [4 /*yield*/, el.present()];\n          case 2:\n            _a.sent();\n            this.api.createMovement$(this.form.value).subscribe(function (message) {\n              el.dismiss();\n              _this.showMessage(message);\n              _this.api.getMovement$(_this.form.value.name).subscribe();\n            }, function (error) {\n              el.dismiss();\n              _this.showError(error);\n            });\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AddMovementPage.prototype.confirmCreation = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var el;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.alertCtrl.create({\n              header: 'Are you sure?',\n              buttons: [{\n                text: 'Cancel',\n                role: 'cancel'\n              }, {\n                text: 'Create it!',\n                handler: function () {\n                  return _this.createMovement();\n                }\n              }]\n            })];\n          case 1:\n            el = _a.sent();\n            el.present();\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AddMovementPage.prototype.showError = function (error) {\n    return __awaiter(this, void 0, void 0, function () {\n      var el;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.alertCtrl.create({\n              header: 'Could not create movement.',\n              message: error,\n              buttons: [{\n                text: 'Go back',\n                role: 'cancel'\n              }]\n            })];\n          case 1:\n            el = _a.sent();\n            el.present();\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AddMovementPage.prototype.showMessage = function (message) {\n    return __awaiter(this, void 0, void 0, function () {\n      var el;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.alertCtrl.create({\n              header: 'Created Movement',\n              message: message,\n              buttons: [{\n                text: 'Okay',\n                handler: function () {\n                  return _this.router.navigate(['movements']);\n                }\n              }]\n            })];\n          case 1:\n            el = _a.sent();\n            el.present();\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AddMovementPage.ɵfac = function AddMovementPage_Factory(t) {\n    return new (t || AddMovementPage)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AlertController), i0.ɵɵdirectiveInject(i2.LoadingController), i0.ɵɵdirectiveInject(i3.ApiService));\n  };\n  AddMovementPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddMovementPage,\n    selectors: [[\"app-add-movement\"]],\n    decls: 39,\n    vars: 5,\n    consts: [[\"slot\", \"start\"], [\"defaultHref\", \"/movements\"], [\"slot\", \"primary\"], [3, \"disabled\", \"click\"], [\"name\", \"checkmark\", \"slot\", \"icon-only\"], [3, \"formGroup\"], [\"size-sm\", \"6\", \"offset-sm\", \"3\"], [\"position\", \"floating\"], [\"type\", \"text\", \"autocomplete\", \"\", \"autocorrect\", \"\", \"ngDefaultControl\", \"\", \"formControlName\", \"name\"], [4, \"ngIf\"], [\"rows\", \"2\", \"ngDefaultControl\", \"\", \"formControlName\", \"short_description\", \"placeholder\", \"What are we going to do?\"], [\"autoGrow\", \"true\", \"rows\", \"3\", \"ngDefaultControl\", \"\", \"formControlName\", \"description\", \"placeholder\", \"Inspire others to join! After which activities are we allowed to fire the signal? Why and how are we going to do this. What messages should users spread around the movement to encourage others? The more specific and engaging you specify the details, the easier it will be for people to participate in the movement.\"], [\"ngDefaultControl\", \"\", \"formControlName\", \"interval\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n    template: function AddMovementPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n        i0.ɵɵelement(3, \"ion-back-button\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-title\");\n        i0.ɵɵtext(5, \"New Movement\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"ion-buttons\", 2)(7, \"ion-button\", 3);\n        i0.ɵɵlistener(\"click\", function AddMovementPage_Template_ion_button_click_7_listener() {\n          return ctx.confirmCreation();\n        });\n        i0.ɵɵelement(8, \"ion-icon\", 4);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(9, \"ion-content\")(10, \"form\", 5)(11, \"ion-grid\")(12, \"ion-row\")(13, \"ion-col\", 6)(14, \"ion-item\")(15, \"ion-label\", 7);\n        i0.ɵɵtext(16, \"Movement name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"ion-input\", 8);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(18, AddMovementPage_ion_row_18_Template, 4, 0, \"ion-row\", 9);\n        i0.ɵɵelementStart(19, \"ion-row\")(20, \"ion-col\", 6)(21, \"ion-item\")(22, \"ion-label\", 7);\n        i0.ɵɵtext(23, \"Short Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"ion-textarea\", 10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(25, AddMovementPage_ion_row_25_Template, 4, 0, \"ion-row\", 9);\n        i0.ɵɵelementStart(26, \"ion-row\")(27, \"ion-col\", 6)(28, \"ion-item\")(29, \"ion-label\", 7);\n        i0.ɵɵtext(30, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"ion-textarea\", 11);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(32, \"ion-row\")(33, \"ion-col\", 6)(34, \"ion-item\")(35, \"ion-label\", 7);\n        i0.ɵɵtext(36, \" Interval \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"ion-select\", 12);\n        i0.ɵɵtemplate(38, AddMovementPage_ion_select_option_38_Template, 2, 2, \"ion-select-option\", 13);\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"disabled\", !ctx.form.valid);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", !ctx.form.get(\"name\").valid && ctx.form.get(\"name\").touched && ctx.form.get(\"name\").value != \"\");\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", !ctx.form.get(\"short_description\").valid && ctx.form.get(\"short_description\").touched && ctx.form.get(\"short_description\").value != \"\");\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngForOf\", ctx.intervalTypes);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i2.IonBackButton, i2.IonButton, i2.IonButtons, i2.IonCol, i2.IonContent, i2.IonGrid, i2.IonHeader, i2.IonIcon, i2.IonInput, i2.IonItem, i2.IonLabel, i2.IonRow, i2.IonSelect, i2.IonSelectOption, i2.IonTextarea, i2.IonTitle, i2.IonToolbar, i2.SelectValueAccessor, i2.TextValueAccessor, i2.IonBackButtonDelegate, i5.FormGroupDirective, i5.FormControlName]\n  });\n  return AddMovementPage;\n}();\nexport { AddMovementPage };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}