{"ast":null,"code":"import { NgZone } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { Router, NavigationStart } from '@angular/router';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { Plugins, Capacitor } from '@capacitor/core';\nimport { AuthService } from './core/auth.service';\nimport { filter, flatMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@ionic-native/splash-screen/ngx\";\nimport * as i4 from \"./core/auth.service\";\nimport * as i5 from \"@angular/common\";\nvar _c0 = function (a0) {\n  return [a0];\n};\nfunction AppComponent_ion_menu_1_ion_menu_toggle_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-menu-toggle\", 6)(1, \"ion-item\", 7);\n    i0.ɵɵelement(2, \"ion-icon\", 8);\n    i0.ɵɵelementStart(3, \"ion-label\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    var p_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerDirection\", \"root\")(\"routerLink\", i0.ɵɵpureFunction1(4, _c0, p_r2.url));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"name\", p_r2.icon);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", p_r2.title, \" \");\n  }\n}\nfunction AppComponent_ion_menu_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-menu\", 2)(1, \"ion-header\")(2, \"ion-toolbar\")(3, \"ion-title\");\n    i0.ɵɵtext(4, \"Menu\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(5, \"ion-content\")(6, \"ion-list\");\n    i0.ɵɵtemplate(7, AppComponent_ion_menu_1_ion_menu_toggle_7_Template, 5, 6, \"ion-menu-toggle\", 3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"ion-footer\")(9, \"ion-button\", 4);\n    i0.ɵɵlistener(\"click\", function AppComponent_ion_menu_1_Template_ion_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r4);\n      var ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.auth.logout());\n    });\n    i0.ɵɵelement(10, \"ion-icon\", 5);\n    i0.ɵɵtext(11, \" Logout \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.appPages);\n  }\n}\nvar AppComponent = /** @class */function () {\n  function AppComponent(platform, router, splashScreen, zone, auth) {\n    this.platform = platform;\n    this.router = router;\n    this.splashScreen = splashScreen;\n    this.zone = zone;\n    this.auth = auth;\n    this.appPages = [{\n      title: 'Home',\n      url: '/home',\n      icon: 'home'\n    }, {\n      title: 'Movements',\n      url: '/movements',\n      icon: 'fitness'\n    }, {\n      title: 'Profile',\n      url: '/profile',\n      icon: 'person'\n    }];\n    this.initializeApp();\n  }\n  AppComponent.prototype.initializeApp = function () {\n    var _this = this;\n    this.platform.ready().then(function () {\n      if (Capacitor.isPluginAvailable('SplashScreen')) {\n        _this.splashScreen.hide();\n      }\n    });\n  };\n  AppComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    // this.auth.isLoggedIn$ is a one-shot observable, which means that it is \n    // not updated when we navigate to another page. Therefore, we look at\n    // navigation events to track the change of this.auth.isLoggedIn$.\n    this.isLoggedIn$ = this.router.events.pipe(filter(function (event) {\n      return event instanceof NavigationStart;\n    }), flatMap(function () {\n      return _this.auth.isLoggedIn$;\n    }));\n    Plugins.App.addListener('appStateChange', this.checkAuthOnResume.bind(this));\n  };\n  AppComponent.prototype.onLogout = function () {};\n  AppComponent.prototype.ngOnDestroy = function () {};\n  AppComponent.prototype.checkAuthOnResume = function (state) {\n    var _this = this;\n    this.zone.run(function () {\n      if (state.isActive) {\n        _this.auth.isLoggedIn$.subscribe(function (loggedIn) {\n          if (!loggedIn) {\n            console.log('On resuming the app found user is now logged out. Redirecting to /login');\n            _this.router.navigate(['/login']);\n          }\n        });\n      }\n    });\n  };\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.SplashScreen), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i4.AuthService));\n  };\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 4,\n    vars: 3,\n    consts: [[\"contentId\", \"main\", \"side\", \"start\", \"menuId\", \"first\", 4, \"ngIf\"], [\"id\", \"main\"], [\"contentId\", \"main\", \"side\", \"start\", \"menuId\", \"first\"], [\"auto-hide\", \"true\", 4, \"ngFor\", \"ngForOf\"], [\"color\", \"dark\", \"expand\", \"full\", \"href\", \"/\", 3, \"click\"], [\"name\", \"exit-outline\", 1, \"ion-padding-end\"], [\"auto-hide\", \"true\"], [3, \"routerDirection\", \"routerLink\"], [\"slot\", \"start\", 3, \"name\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-app\");\n        i0.ɵɵtemplate(1, AppComponent_ion_menu_1_Template, 12, 1, \"ion-menu\", 0);\n        i0.ɵɵpipe(2, \"async\");\n        i0.ɵɵelement(3, \"ion-router-outlet\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 1, ctx.isLoggedIn$));\n      }\n    },\n    dependencies: [i5.NgForOf, i5.NgIf, i1.IonApp, i1.IonButton, i1.IonContent, i1.IonFooter, i1.IonHeader, i1.IonIcon, i1.IonItem, i1.IonLabel, i1.IonList, i1.IonMenu, i1.IonMenuToggle, i1.IonTitle, i1.IonToolbar, i1.IonRouterOutlet, i1.RouterLinkDelegate, i2.RouterLink, i5.AsyncPipe],\n    encapsulation: 2\n  });\n  return AppComponent;\n}();\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}